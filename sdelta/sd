#!/bin/bash
# sd compression wrapper for sdelta
# Copyright 2005 by Kyle Sallee
# Distributed under the terms of the SPL
# See /usr/share/sdelta/LICENSE


compression()  {
  case  $(  file  -b  "$1"  )  in
          7z*)  echo  "7z"    ;;
       bzip2*)  echo  "bzip2" ;;
        gzip*)  echo  "gzip"  ;;
    compress*)  echo  "gzip"  ;;
  esac
}


is_sdelta()  {
  file  -b  -m  /usr/share/sdelta/magic  "$1"  |
  grep  -q  sdelta
}


root()  {
  local  R
         R="${1%.7z}"
         R="${R%.bz2}"
         R="${R%.gz}"
         R="${R/.tgz/.tar}"
         R="${R%.sdelta}"
         R="${R%.sd}"
  echo "$R"
}


tmp_root()  {
  local  R
         R="$(  root  "$1"  )"
  
  echo "/tmp/${R##*/}.$RANDOM$RANDOM"
}


uncompress()  {
  case  $(  compression    "$1"  )  in
       7z)  7za    x  -so  "$1"  >  $2  2>/dev/null  ;;
    bzip2)  bzip2     -cd  "$1"  >  $2  ;;
     gzip)  gzip      -cd  "$1"  >  $2  ;;
  esac
}


uncompress_name()  {
  local  T
         T="$(  tmp_root  "$1"  )"
  case  $(  compression   "$1"  )  in
       7z)  echo  "$T"  ;;
    bzip2)  echo  "$T"  ;;
     gzip)  echo  "$T"  ;;
        *)  echo  "$1"  ;;
  esac
}

compress()  {
  rm  -f  "$2"
  case  "${2##*.}"  in
       7z)  7za     a   -si  "$2"  <  "$1"  2>/dev/null ;;
      bz2)  bzip2  -9c    >  "$2"  <  "$1"  ;;
       gz)  gzip   -9c    >  "$2"  <  "$1"  ;;
      tgz)  gzip   -9c    >  "$2"  <  "$1"  ;;
        *)  mv      "$1"     "$2"  ;;
  esac  &&  rm  -f  "$1"
}


guess()  {
  local  R
    R="$(  root  "$1"  )"

    if  [  -f  "$1"            ];  then  echo  "$1"
  elif  [  -f  "$R.tar"        ];  then  echo  "$R.tar"
  elif  [  -f  "$R.tar.7z"     ];  then  echo  "$R.tar.7z"
  elif  [  -f  "$R.tar.bz2"    ];  then  echo  "$R.tar.bz2"
  elif  [  -f  "$R.tar.gz"     ];  then  echo  "$R.tar.gz"
  elif  [  -f  "$R.tgz"        ];  then  echo  "$R.tgz"
  elif  [  -f  "$R.sdelta.7z"  ];  then  echo  "$R.sdelta.7z"
  elif  [  -f  "$R.sdelta.bz2" ];  then  echo  "$R.sdelta.bz2"
  elif  [  -f  "$R.sdelta.gz"  ];  then  echo  "$R.sdelta.gz"
  elif  [  -f  "$R.sd.7z"      ];  then  echo  "$R.sd.7z"
  elif  [  -f  "$R.sd.bz2"     ];  then  echo  "$R.sd.bz2"
  elif  [  -f  "$R.sd.gz"      ];  then  echo  "$R.sd.gz"
  elif  [  -f  "$R.7z"         ];  then  echo  "$R.7z"
  elif  [  -f  "$R.bz2"        ];  then  echo  "$R.bz2"
  elif  [  -f  "$R.gz"         ];  then  echo  "$R.gz"
                                   else  echo  "$1 not found.";   exit  1
  fi
}


if    [  "$1"  == "--help" ]  ||
      ((  $#   <  3       ))
then
  echo      $"sd compression wrapper for sdelta"
  echo      $"Copyright 2005 by Kyle Sallee"
  echo      $"Distributed under the terms of the SPL"
  echo      $"See /usr/share/sdelta/LICENSE"
  echo
  echo  -e  $"To generate a patch file:  \e[32msd  \e[34mold  \e[36mnew    \e[32mpatch\e[0m"
  echo  -e  $"To apply    a patch file:  \e[32msd  \e[34mold  \e[32mpatch  \e[36mnew\e[0m"
  echo      $"Compression types that are automatically detected and supported are:"
  echo       "7za, bzip2, gzip"
  exit  1
fi

if    (( ${BASH_VERSINFO[0]} < 3 ))
then  echo  $"Upgrade to BASH version 3.0 or later to use this wrapper."
      exit  1
fi


if    !  [  -f  /usr/share/sdelta/magic  ]
then  echo  $"Unable to identify sdelta patches without /usr/share/sdelta/magic installed."
      echo  $"Please install or reinstall sdelta."
fi


R1="$(  guess            "$1"   )"
R2="$(  guess            "$2"   )"
D1="$(  uncompress_name  "$R1"  )"
D2="$(  uncompress_name  "$R2"  )"

uncompress "$R1"  "$D1"  &
uncompress "$R2"  "$D2"  &

D3="$3"
R3="$(  tmp_root  "$3"  )"

wait

if    is_sdelta  "$D1"
then  R0="$R2";  D0="$D2"
      R2="$R1";  D2="$D1"
      R1="$R0";  D1="$D0"
fi

sdelta "$D1"  "$D2"  >  "$R3"
RET=$?

if    [  "$R1"  !=  "$D1"  ];  then  rm  -f           "$D1";  fi
if    [  "$R2"  !=  "$D2"  ];  then  rm  -f           "$D2";  fi
if    ((  RET   ==  0     ));  then  compress  "$R3"  "$D3";  fi

exit  $RET
